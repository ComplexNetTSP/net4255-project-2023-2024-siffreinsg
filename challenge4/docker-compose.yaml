version: '3'
services:
  webdb:
    build:
      context: webdb
      dockerfile: Dockerfile
    container_name: webdb
    image: siffreinsg/net4255_webdb:v4
    environment:
      APP_ENV: "prod"
      APP_DEBUG: "false"
      APP_PORT: 5000
      MONGODB_DATABASE: webdb
      MONGODB_USERNAME: root
      MONGODB_PASSWORD: pass
      MONGODB_HOSTNAME: mongodb
      MONGODB_PORT: 27017
    ports:
      - "5000:5000"
    volumes:
      - webdbdata:/app
    depends_on:
      - mongodb
    networks:
      - frontend
      - backend

  webnodb:
    build:
      context: webnodb
      dockerfile: Dockerfile
    container_name: webnodb
    image: siffreinsg/net4255_webnodb:v4
    environment:
      APP_ENV: "prod"
      APP_DEBUG: "false"
      APP_PORT: 5000
    ports:
      - "5001:5000"
    volumes:
      - webnodbdata:/app
    networks:
      - frontend
      - backend

  mongodb:
    image: mongodb/mongodb-community-server:latest
    container_name: mongodb
    command: mongod
    environment:
      MONGODB_INITDB_ROOT_USERNAME: root
      MONGODB_INITDB_ROOT_PASSWORD: pass
      MONGODB_INITDB_DATABASE: webdb
      MONGODB_DATA_DIR: /data/db
      MONGODB_LOG_DIR: /dev/null
    volumes:
      - dbdata:/data/db
    networks:
      - backend

  webserver:
    build:
      context: nginx
      dockerfile: Dockerfile
    image: siffreinsg/net4255_webserver:v4
    container_name: webserver
    environment:
      APP_ENV: "prod"
      APP_NAME: "webserver"
      APP_DEBUG: "false"
      SERVICE_NAME: "webserver"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - webserverdata:/var/log/nginx
    depends_on:
      - webdb
      - webnodb
    networks:
      - frontend


networks:
  frontend:
    driver: bridge
  backend:
    driver: bridge

volumes:
  dbdata:
    driver: local
  webdbdata:
    driver: local
  webnodbdata:
    driver: local
  webserverdata:
    driver: local
